{"version":3,"file":"modal.stories-028d61c7.js","sources":["../../../../packages/modal/src/lib/ModalProvider.tsx","../../../../packages/modal/src/lib/modal.tsx","../../../../packages/modal/src/lib/ModalTrigger.tsx","../../../../packages/modal/src/lib/ModalBackdrop.tsx","../../../../packages/modal/src/lib/ModalContent.tsx","../../../../packages/modal/src/lib/ModalHeader.tsx","../../../../packages/modal/src/lib/ModalTitle.tsx","../../../../packages/modal/src/lib/ModalBody.tsx","../../../../packages/modal/src/lib/ModalFooter.tsx"],"sourcesContent":["import { ReactNode, useContext, createContext, useState } from \"react\"\n\ninterface IModalProvider {\n    isOpen: boolean \n    modal?: ReactNode\n    openModal: () => void \n    closeModal: () => void \n}\n\nconst ModalContext = createContext<IModalProvider>({\n    isOpen: false,\n} as IModalProvider)\n\nexport function ModalProvider({ children }: { children: ReactNode }) {\n    const [isOpen, setIsOpen] = useState(false)\n    const openModal = () => setIsOpen(true)\n    const closeModal = () => setIsOpen(false)\n    const [modal, setModal] = useState()\n\n\n    return (\n        <ModalContext.Provider value={{closeModal, openModal, isOpen, modal}}>\n            {children}\n        </ModalContext.Provider>\n    )\n}\n\nexport const useModalContext = () => useContext(ModalContext)","import { ReactNode } from \"react\";\nimport { ModalProvider } from \"./ModalProvider\";\n\n/* eslint-disable-next-line */\nexport interface ModalProps {\n  children: ReactNode | string\n}\n\nexport function Modal(props: ModalProps) {\n  return (\n    <ModalProvider>\n      {props.children}\n    </ModalProvider>\n  );\n}\n\nexport default Modal;","import { ReactNode } from \"react\"\nimport { useModalContext } from \"./ModalProvider\"\n\ninterface ModalTriggerProps {\n    children: ReactNode | string\n}\n\nexport const ModalTrigger = (props: ModalTriggerProps) => {\n    const context = useModalContext()\n\n    return (\n        <div className=\"modal-trigger\" onClick={() => context.openModal()}>\n            { props.children }\n        </div>\n    )\n}","interface ModalBackdropProps {\n    onClick?: () => void\n}\nexport const ModalBackdrop = (props: ModalBackdropProps) => {\n    return (\n        <div className=\"modal-backdrop fixed inset-0 bg-gray-800/90 z-[99]\" onClick={props.onClick}></div>\n    )\n}","import { cn } from \"@bootwind/common\"\nimport { ReactNode, useEffect } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { ModalBackdrop } from \"./ModalBackdrop\"\nimport { useModalContext } from \"./ModalProvider\"\n\ninterface ModalContentProps {\n    children?: ReactNode | string\n    isOpen?: boolean\n    className?: string\n    onModalOpen?: () => void\n    onModalClose?: () => void\n}\n\nexport const ModalContent = ({ isOpen = false, ...props }: ModalContentProps) => {\n    const context = useModalContext()\n\n    // Close or open modal reacting to the props\n    useEffect(() => {\n        if(isOpen) context.openModal()\n        else context.closeModal()\n    }, [isOpen])\n\n    // Close or open modal reacting to the context\n    useEffect(() => {\n        if(context.isOpen && props.onModalOpen) props.onModalOpen()\n        else if (!context.isOpen && props.onModalClose) props.onModalClose()\n    }, [context.isOpen])\n    \n    return (\n        createPortal(\n            (\n                <div className={cn(\"fixed inset-0 transition duration-200 px-5 pb-5 overflow-auto [&:not(.show)]:opacity-0 [&:is(.show)]:opacity-100 [&:not(.show)]:invisible [&:is(.show)]:visible [&:is(.show)]:transition [&:is(.show)_.modal]:top-24 \", isOpen ? 'show' : '')}>\n                    <div className=\"relative\">\n                        <div className=\"modal z-[100] top-20 bg-white absolute max-w-[600px] w-full left-1/2 -translate-x-1/2 rounded-md\">\n                            {props.children}\n                        </div>\n                    </div>\n                    <ModalBackdrop onClick={() => context.closeModal()}/>\n                </div>\n            ),\n            document.body\n        )\n    )\n}","import { cn } from \"@bootwind/common\"\nimport { ReactNode } from \"react\"\n\ninterface ModalHeaderProps {\n    children?: ReactNode | string\n    className?: string\n}\n\nexport const ModalHeader = (props: ModalHeaderProps) => (\n    <div className={cn(\"modal-header | p-5 pb-0\", props.className)}>\n        {props.children}\n    </div>\n)","import { cn } from \"@bootwind/common\"\nimport { ReactNode } from \"react\"\nimport { Text } from \"@bootwind/typography\"\n\ninterface ModalTitleProps {\n    children?: ReactNode | string\n    className?: string\n}\n\nexport const ModalTitle = (props: ModalTitleProps) => (\n    <Text className={cn(\"modal-title\", props.className)}>{ props.children }</Text>\n)","import { cn } from \"@bootwind/common\"\nimport { ReactNode } from \"react\"\n\ninterface ModalBodyProps {\n    children?: ReactNode | string\n    className?: string\n}\n\nexport const ModalBody = (props: ModalBodyProps) => (\n    <div className=\"modal-body p-5 pt-0\">\n        { props.children }\n    </div>\n)","import { cn } from \"@bootwind/common\"\nimport { ReactNode } from \"react\"\n\ninterface ModalFooterProps {\n    children?: ReactNode | string\n    className?: string\n}\n\nexport const ModalFooter = (props: ModalFooterProps) => (\n    <div className={cn(\"modal-footer p-5 pt-0\", props.className)}>\n        {props.children}\n    </div>\n)"],"names":["ModalContext","createContext","ModalProvider","children","isOpen","setIsOpen","useState","openModal","closeModal","modal","setModal","jsx","useModalContext","useContext","Modal","props","ModalTrigger","context","ModalBackdrop","ModalContent","useEffect","createPortal","jsxs","cn","ModalHeader","ModalTitle","Text","ModalBody","ModalFooter"],"mappings":"8SASA,MAAAA,EAAAC,EAAAA,cAAA,CAAmD,OAAA,EAEnD,CAAA,EAEO,SAAAC,EAAA,CAAA,SAAAC,GAAA,CACH,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAA,IAAAF,EAAA,EAAA,EACAG,EAAA,IAAAH,EAAA,EAAA,EACA,CAAAI,EAAAC,CAAA,EAAAJ,EAAA,SAAA,EAGA,OAAAK,EAAAX,EAAA,SAAA,CAAA,MAAA,CAAA,WAAAQ,EAAA,UAAAD,EAAA,OAAAH,EAAA,MAAAK,GAAA,SAAAN,CAAA,CAAA,CAKJ,CAEO,MAAAS,EAAA,IAAAC,aAAAb,CAAA,gHCnBA,SAAAc,EAAAC,EAAA,CACL,OAAAJ,EAAAT,EAAA,CAAA,SAAAa,EAAA,QAAA,CAAA,CAKF,+FCPO,MAAAC,EAAAD,GAAA,CACH,MAAAE,EAAAL,IAEA,OAAAD,EAAA,MAAA,CAAA,UAAA,gBAAA,QAAA,IAAAM,EAAA,UAAA,EAAA,SAAAF,EAAA,QAAA,CAAA,CAKJ,8GCZO,MAAAG,EAAAH,GACHJ,EAAA,MAAA,CAAA,UAAA,qDAAA,QAAAI,EAAA,OAAA,CAAA,gNCUG,MAAAI,EAAA,CAAA,CAAA,OAAAf,EAAA,GAAA,GAAAW,CAAA,IAAA,CACH,MAAAE,EAAAL,IAGAQ,OAAAA,EAAAA,UAAA,IAAA,CACIhB,EAAWa,EAAA,UAAA,EACNA,EAAA,WAAA,CAAmB,EAAA,CAAAb,CAAA,CAAA,EAI5BgB,EAAAA,UAAA,IAAA,CACIH,EAAA,QAAAF,EAAA,YAAwCA,EAAA,YAAA,EAAkB,CAAAE,EAAA,QAAAF,EAAA,cACVA,EAAA,aAAA,CAAmB,EAAA,CAAAE,EAAA,MAAA,CAAA,EAGvEI,EAAA,aACIC,EAAA,MAAA,CAAA,UAAAC,EAAA,wNAAAnB,EAAA,OAAA,EAAA,EAAA,SAAA,CAGYO,EAAA,MAAA,CAAA,UAAA,WAAA,SAAAA,EAAA,MAAA,CAAA,UAAA,mGAAA,SAAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EAIAJ,EAAAO,EAAA,CAAA,QAAA,IAAAD,EAAA,WAAA,EAAA,CACmD,EAAA,EACvD,SAAA,IAEK,CAGrB,qgBCpCO,MAAAO,EAAAT,GAAAJ,EAAA,MAAA,CAAA,UAAAY,EAAA,0BAAAR,EAAA,SAAA,EAAA,SAAAA,EAAA,QAAA,CAAA,0MCCA,MAAAU,EAAAV,GAAAJ,EAAAe,EAAA,CAAA,UAAAH,EAAA,cAAAR,EAAA,SAAA,EAAA,SAAAA,EAAA,QAAA,CAAA,wMCDA,MAAAY,EAAAZ,GAAAJ,EAAA,MAAA,CAAA,UAAA,sBAAA,SAAAI,EAAA,QAAA,CAAA,sMCAA,MAAAa,EAAAb,GAAAJ,EAAA,MAAA,CAAA,UAAAY,EAAA,wBAAAR,EAAA,SAAA,EAAA,SAAAA,EAAA,QAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;"}