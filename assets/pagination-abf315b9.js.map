{"version":3,"file":"pagination-abf315b9.js","sources":["../../../../packages/pagination/src/lib/pagination.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  HiChevronLeft,\n  HiChevronRight,\n  HiArrowLeft,\n  HiArrowRight,\n} from 'react-icons/hi2';\n\nimport {cn} from '@bootwind/common'\n\nexport interface PaginationProps {\n  type?: 'card' | 'centered' | 'simple';\n  currentPage: number;\n  className?: string\n  totalResults: number;\n  resultsPerPage: number;\n  onPrevClick: () => void;\n  onNextClick: () => void;\n  onPageClick: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  type = 'card',\n  currentPage,\n  totalResults,\n  resultsPerPage,\n  className,\n  onPrevClick,\n  onNextClick,\n  onPageClick,\n}) => {\n  const totalPages = Math.ceil(totalResults / resultsPerPage);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  switch (type) {\n    case 'card':\n      return (\n        <div className={cn(\"flex items-center justify-between border-t border-gray-200 bg-white py-3\", className)}>\n          <div className=\"flex flex-1 justify-between sm:hidden\">\n            <button\n              type=\"button\"\n              onClick={onPrevClick}\n              className=\"relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\n            >\n              Previous\n            </button>\n            <button\n              type=\"button\"\n              onClick={onNextClick}\n              className=\"relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50\"\n            >\n              Next\n            </button>\n          </div>\n          <div className=\"hidden sm:flex sm:flex-1 sm:items-center sm:justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-700\">\n                Showing{' '}\n                <span className=\"font-medium\">\n                  {(currentPage - 1) * resultsPerPage + 1}\n                </span>{' '}\n                to{' '}\n                <span className=\"font-medium\">\n                  {Math.min(currentPage * resultsPerPage, totalResults)}\n                </span>{' '}\n                of <span className=\"font-medium\">{totalResults}</span> results\n              </p>\n            </div>\n            <div>\n              <nav\n                className=\"isolate inline-flex -space-x-px rounded-md shadow-sm\"\n                aria-label=\"Pagination\"\n              >\n                <button\n                  type=\"button\"\n                  onClick={onPrevClick}\n                  disabled={isFirstPage}\n                  className={`${\n                    isFirstPage ? 'opacity-50 cursor-not-allowed' : ''\n                  } relative inline-flex items-center rounded-l-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20`}\n                >\n                  <span className=\"sr-only\">Previous</span>\n                  <HiChevronLeft className=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n                {[...Array(totalPages)].map((_, index) => (\n                  <button\n                    key={index}\n                    type=\"button\"\n                    onClick={() => onPageClick(index + 1)}\n                    aria-current={\n                      currentPage === index + 1 ? 'page' : undefined\n                    }\n                    className={`relative ${\n                      currentPage === index + 1 ? 'z-10 ' : ''\n                    }inline-flex items-center border border-gray-300 bg-white px-4 py-2 text-sm font-medium ${\n                      currentPage === index + 1\n                        ? 'text-indigo-600'\n                        : 'text-gray-500 hover:bg-gray-50'\n                    } focus:z-20`}\n                  >\n                    {index + 1}\n                  </button>\n                ))}\n                <button\n                  type=\"button\"\n                  onClick={onNextClick}\n                  disabled={isLastPage}\n                  className={`${\n                    isLastPage ? 'opacity-50 cursor-not-allowed' : ''\n                  } relative inline-flex items-center rounded-r-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20`}\n                >\n                  <span className=\"sr-only\">Next</span>\n                  <HiChevronRight className=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </nav>\n            </div>\n          </div>\n        </div>\n      );\n\n    case 'centered':\n      return (\n        <nav className=\"flex items-center justify-between border-t border-gray-200 px-4 sm:px-0\">\n          <div className=\"-mt-px flex w-0 flex-1\">\n            <button\n              type=\"button\"\n              onClick={onPrevClick}\n              disabled={isFirstPage}\n              className={`${\n                isFirstPage ? 'opacity-50 cursor-not-allowed' : ''\n              } inline-flex items-center rounded-lg border border-gray-300 mt-4 py-1.5 px-4 text-sm font-medium text-gray-700 hover:border-gray-300 hover:text-gray-900`}\n            >\n              <HiArrowLeft\n                className=\"mr-3 h-4 w-4 text-gray-700\"\n                aria-hidden=\"true\"\n              />\n              Previous\n            </button>\n          </div>\n          <div className=\"hidden md:-mt-px md:flex\">\n            {[...Array(totalPages)].map((_, index) => (\n              <button\n                key={index}\n                type=\"button\"\n                onClick={() => onPageClick(index + 1)}\n                className={`inline-flex items-center border-t-2 border-transparent px-4 mt-4 text-sm font-medium ${\n                  currentPage === index + 1\n                    ? 'bg-indigo-500 text-white px-3 py-2 rounded-lg'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n          <div className=\"-mt-px flex w-0 flex-1 justify-end\">\n            <button\n              type=\"button\"\n              disabled={isLastPage}\n              onClick={onNextClick}\n              className={`${\n                isLastPage ? 'opacity-50 cursor-not-allowed' : ''\n              } inline-flex items-center rounded-lg border border-gray-300 mt-4 py-1.5 px-4 text-sm font-medium text-gray-700 hover:border-gray-300 hover:text-gray-900`}\n            >\n              Next\n              <HiArrowRight\n                className=\"ml-3 h-4 w-4 text-gray-700\"\n                aria-hidden=\"true\"\n              />\n            </button>\n          </div>\n        </nav>\n      );\n\n    case 'simple':\n      return (\n        <nav\n          className=\"flex items-center justify-between border-t border-gray-200 bg-white py-3\"\n          aria-label=\"Pagination\"\n        >\n          <div className=\"hidden sm:block\">\n            <p className=\"text-sm text-gray-700\">\n              Showing <span className=\"font-medium\">1</span> to{' '}\n              <span className=\"font-medium\">{resultsPerPage}</span> of{' '}\n              <span className=\"font-medium\">{totalResults}</span> results\n            </p>\n          </div>\n          <div className=\"flex flex-1 justify-between sm:justify-end\">\n            <button\n              type=\"button\"\n              disabled={isFirstPage}\n              onClick={onPrevClick}\n              className={`${\n                isFirstPage ? 'opacity-50 cursor-not-allowed' : ''\n              } relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-20`}\n            >\n              <HiArrowLeft\n                className=\"mr-3 h-4 w-4 text-gray-700\"\n                aria-hidden=\"true\"\n              />\n              Previous\n            </button>\n            <button\n              type=\"button\"\n              disabled={isLastPage}\n              onClick={onNextClick}\n              className={`${\n                isLastPage ? 'opacity-50 cursor-not-allowed' : ''\n              } relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-20`}\n            >\n              Next\n              <HiArrowRight\n                className=\"ml-3 h-4 w-4 text-gray-700\"\n                aria-hidden=\"true\"\n              />\n            </button>\n          </div>\n        </nav>\n      );\n\n    default:\n      return null;\n  }\n};\n\nexport default Pagination;\n"],"names":["Pagination","type","currentPage","totalResults","resultsPerPage","className","onPrevClick","onNextClick","onPageClick","totalPages","isFirstPage","isLastPage","jsxs","cn","jsx","HiChevronLeft","_","index","HiChevronRight","HiArrowLeft","HiArrowRight"],"mappings":"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"}