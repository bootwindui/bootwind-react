{"version":3,"file":"Breadcrumbs.stories-37c29050.js","sources":["../../../../packages/breadcrumb/src/lib/breadcrumb.tsx"],"sourcesContent":["import React from 'react';\nimport { GoChevronRight, GoHome } from 'react-icons/go';\nimport { cn } from \"@bootwind/common\"\n\nexport interface BreadcrumbsProps {\n  children: React.ReactNode\n  items?: BreadcrumbItemProps[]\n  className?: string\n}\n\nexport const Breadcrumbs: React.FC<BreadcrumbsProps> = ({ children, items, className }) => {\n  return (\n    <nav className={cn(\"flex\", className)} aria-label=\"Breadcrumb\">\n      <ol role=\"list\" className=\"flex items-center space-x-2\">\n        {items?.map((item, index) => (\n          <li key={index}>\n            <div className=\"inline-flex items-center\">\n              {index > 0 && (\n                <GoChevronRight\n                  className=\"mr-2 h-3 w-3 flex-shrink-0 text-gray-500\"\n                  aria-hidden=\"true\"\n                />\n              )}\n              <BreadcrumbItem {...item}></BreadcrumbItem>\n            </div>\n          </li>\n        ))}\n        {React.Children.map(children, (child, index) => (\n          <li key={index}>\n            <div className=\"flex items-center\">\n              {index > 0 && (\n                <GoChevronRight\n                  className=\"mr-2 h-3 w-3 flex-shrink-0 text-gray-500\"\n                  aria-hidden=\"true\"\n                />\n              )}\n              {child}\n            </div>\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n};\n\ninterface BreadcrumbItemProps {\n  href?: string;\n  children?: React.ReactNode;\n  icon?: React.ReactNode;\n  isActive?: boolean;\n  className?: string\n}\n\nexport const BreadcrumbItem: React.FC<BreadcrumbItemProps> = ({\n  href,\n  children,\n  icon,\n  isActive = false,\n  className\n}) => {\n  const content = href ? (\n    <a\n      className={`text-sm font-medium ${isActive ? 'text-indigo-600' : 'text-gray-500 hover:text-gray-700'\n        }`}\n      href={href}\n    >\n      {children}\n    </a>\n  ) : (\n    <span\n      className={`text-sm font-medium ${isActive ? 'text-indigo-600' : 'text-gray-500'\n        }`}\n    >\n      {children}\n    </span>\n  );\n\n  return (\n    <div className={cn(\"breadcrumb inline-flex\", className)}>\n      {icon &&\n        React.cloneElement(icon as React.ReactElement, {\n          className: `${isActive ? 'text-indigo-600' : 'text-gray-500'} ${children ? 'mr-2' : ''\n            }`,\n        })}\n      {content}\n    </div>\n  );\n};\n"],"names":["Breadcrumbs","children","items","className","jsx","cn","jsxs","item","index","GoChevronRight","BreadcrumbItem","React","child","href","icon","isActive","content"],"mappings":"gRAUO,MAAAA,EAAA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,UAAAC,CAAA,IACLC,EAAA,MAAA,CAAA,UAAAC,EAAA,OAAAF,CAAA,EAAA,aAAA,aAAA,SAAAG,EAAA,KAAA,CAAA,KAAA,OAAA,UAAA,8BAAA,SAAA,CAGOJ,GAAA,YAAAA,EAAA,IAAA,CAAAK,EAAAC,IAAAJ,EAAA,KAAA,CAAA,SAAAE,EAAA,MAAA,CAAA,UAAA,2BAAA,SAAA,CAGME,EAAA,GAAAJ,EACCK,EAAC,CAAA,UAAA,2CACW,cAAA,MACE,CAAA,EACdL,EAAAM,EAAA,CAAA,GAAAH,EAAA,CAEwB,EAAA,CAAA,EAAAC,CAAA,GAG/BG,EAAA,SAAA,IAAAV,EAAA,CAAAW,EAAAJ,IAAAJ,EAAA,KAAA,CAAA,SAAAE,EAAA,MAAA,CAAA,UAAA,oBAAA,SAAA,CAIME,EAAA,GAAAJ,EACCK,EAAC,CAAA,UAAA,2CACW,cAAA,MACE,CAAA,EACdG,CAED,EAAA,CAAA,EAAAJ,CAAA,CAAA,CAGN,CAAA,CAAA,CAAA,CAAA,EAcFE,EAAA,CAAA,CAAuD,KAAAG,EAC5D,SAAAZ,EACA,KAAAa,EACA,SAAAC,EAAA,GACW,UAAAZ,CAEb,IAAA,CACE,MAAAa,EAAAH,EAAAT,EACE,IAAC,CAAA,UAAA,uBAAAW,EAAA,kBAAA,mCAAA,GAEG,KAAAF,EACF,SAAAZ,CAEC,CAAA,EAAAG,EAGH,OAAC,CAAA,UAAA,uBAAAW,EAAA,kBAAA,eAAA,GAEG,SAAAd,CAED,CAAA,EAIL,OAAAK,EAAA,MAAA,CAAA,UAAAD,EAAA,yBAAAF,CAAA,EAAA,SAAA,CAEKW,GAAAH,EAAA,aAAAG,EAAA,CACgD,UAAA,GAAAC,EAAA,kBAAA,eAAA,IAAAd,EAAA,OAAA,EAAA,EAE3C,CAAA,EACHe,CACF,CAAA,CAAA,CAGP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}