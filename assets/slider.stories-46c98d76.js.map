{"version":3,"file":"slider.stories-46c98d76.js","sources":["../../../../packages/slider/src/lib/slider.tsx"],"sourcesContent":["import React, { ReactNode, useState } from \"react\";\nimport { cn } from \"@bootwind/common\";\n\nexport interface SliderProps {\n  min?: number;\n  max?: number;\n  className?: string;\n  leftContent?: ReactNode;\n  rightContent?: ReactNode;\n}\n\nexport const Slider: React.FC<SliderProps> = ({\n  min = 1,\n  max = 5,\n  className,\n  leftContent,\n  rightContent,\n}) => {\n  const [value, setValue] = useState((min + max) / 2);\n  const [hoveredValue, setHoveredValue] = useState<number | null>(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  const handleSliderChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(parseInt(event.target.value, 10));\n  };\n\n  const handleSliderHover = (event: React.MouseEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.currentTarget.value, 10);\n    const rect = event.currentTarget.getBoundingClientRect();\n    setTooltipPosition({ x: event.clientX, y: rect.top - 30 });\n    setHoveredValue(newValue);\n    setShowTooltip(true); // Show tooltip when hovering\n  };\n\n  const handleSliderLeave = () => {\n    setHoveredValue(null);\n    setShowTooltip(false); // Hide tooltip when leaving\n  };\n\n  return (\n    <fieldset className=\"flex flex-nowrap items-center max-w-xs space-x-2 text-gray-100 relative\">\n      {leftContent && <label htmlFor=\"Slider\">{leftContent}</label>}\n      <input\n        id=\"Slider\"\n        type=\"range\"\n        value={value}\n        onChange={handleSliderChange}\n        onMouseMove={handleSliderHover}\n        onMouseLeave={handleSliderLeave}\n        className={cn(className, \"w-full h-2 rounded-lg cursor-pointer accent-primary\")}\n        min={min}\n        max={max}\n      />\n      {showTooltip && hoveredValue !== null && (\n        <div\n          className=\"tooltip absolute bg-gray-800 text-white text-xs py-1 px-2 rounded\"\n          style={{ left: tooltipPosition.x, top: tooltipPosition.y }}\n        >\n          {hoveredValue}\n        </div>\n      )}\n      {rightContent && <label htmlFor=\"Slider\">{rightContent}</label>}\n    </fieldset>\n  );\n};\n"],"names":["Slider","min","max","className","leftContent","rightContent","value","setValue","useState","hoveredValue","setHoveredValue","tooltipPosition","setTooltipPosition","showTooltip","setShowTooltip","jsxs","jsx","event","newValue","rect","cn"],"mappings":"yKAWO,MAAAA,EAAA,CAAA,CAAuC,IAAAC,EAAA,EACtC,IAAAC,EAAA,EACA,UAAAC,EACN,YAAAC,EACA,aAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,UAAAP,EAAAC,GAAA,CAAA,EACA,CAAAO,EAAAC,CAAA,EAAAF,EAAA,SAAA,IAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EACA,CAAAK,EAAAC,CAAA,EAAAN,EAAA,SAAA,EAAA,EAmBA,OAAAO,EAAA,WAAA,CAAA,UAAA,0EAAA,SAAA,CAEKX,GAAAY,EAAA,QAAA,CAAA,QAAA,SAAA,SAAAZ,EAAA,EAAoDY,EACrD,QAAC,CAAA,GAAA,SACI,KAAA,QACE,MAAAV,EACL,SAvBNW,GAAA,CACEV,EAAA,SAAAU,EAAA,OAAA,MAAA,EAAA,CAAA,CAAyC,EAuB3B,YApBhBA,GAAA,CACE,MAAAC,EAAA,SAAAD,EAAA,cAAA,MAAA,EAAA,EACAE,EAAAF,EAAA,cAAA,sBAAA,EACAL,EAAA,CAAA,EAAAK,EAAA,QAAA,EAAAE,EAAA,IAAA,EAAA,CAAA,EACAT,EAAAQ,CAAA,EACAJ,EAAA,EAAA,CAAmB,EAgBF,aAbnB,IAAA,CACEJ,EAAA,IAAA,EACAI,EAAA,EAAA,CAAoB,EAYF,UAAAM,EAAAjB,EAAA,qDAAA,EACgE,IAAAF,EAC9E,IAAAC,CACA,CAAA,EACFW,GAAAJ,IAAA,MAAAO,EAEE,MAAC,CAAA,UAAA,oEACW,MAAA,CAAA,KAAAL,EAAA,EAAA,IAAAA,EAAA,CAAA,EAC+C,SAAAF,CAExD,CAAA,EACHJ,GAAAW,EAAA,QAAA,CAAA,QAAA,SAAA,SAAAX,EAAA,CAEqD,CAAA,CAAA,CAG7D;;;;;;;;;;;;;;;;;;;"}